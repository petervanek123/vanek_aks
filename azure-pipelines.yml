# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: k8s-hatchery
stages:
- stage: __default
  jobs:
  - job: Job
    pool:
      name: k8s-hatchery
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          sed -i 's/<terraform-sp-password>/$(CLIENT_SECRET)/g' gitops/k8s/base/secret.yaml

    - task: CmdLine@2
      displayName: 'install az'
      inputs:
        script: |
          echo $(CLIENT_SECRET)
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    - task: AzureCLI@2
      displayName: 'Install, init, apply terraform, AKS credentials'
      inputs:
        azureSubscription: 'Unicorn MS Academy ARCH 11(ccf6dd5f-428b-4601-bec7-8a6b42520dc9)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          wget -O- https://apt.releases.hashicorp.com/gpg | \
          gpg --dearmor | \
          sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          gpg --no-default-keyring \
          --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
          --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
          https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
          sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform
          terraform init --upgrade
          terraform apply -var="client_secret=$(CLIENT_SECRET)" -var="tenant_id=$(TENANT_ID)" -var="client_id=$(CLIENT_ID)" -var="subscription_id=$(SUBSCRIPTION_ID)" -auto-approve
          az aks get-credentials --name k8s_vanek-aks --resource-group k8s_vanek-rg --admin
          az aks update -g k8s_vanek-rg -n k8s_vanek-aks --enable-managed-identity
          az aks update -n k8s_vanek-aks -g k8s_vanek-rg --attach-acr "/subscriptions/ccf6dd5f-428b-4601-bec7-8a6b42520dc9/resourceGroups/k8s_vanek-rg/providers/Microsoft.ContainerRegistry/registries/vanekCR"
         
         
        workingDirectory: 'gitops/terraform/'
        
    - task: Docker@2
      displayName: 'docker build and push'
      inputs:
        containerRegistry: 'az-vanek-sc1'
        repository: 'vanekcr.azurecr.io/vanekapp'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'

    
    - task: CmdLine@2
      displayName: 'run kustomize'
      inputs:
        script: |
          kubectl create ns dev
          kubectl apply -k ./gitops/k8s/base

